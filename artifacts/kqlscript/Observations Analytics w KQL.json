{
	"name": "Observations Analytics w KQL",
	"properties": {
		"content": {
			"query": "ObservationCurated\n| take 100 \n\n// Total number of observations \nObservationCurated\n| count \n\n// Observations min and max date\nObservationCurated\n| summarize min(issued), max(issued)\n\n// Summarizes the count of observations by grouping them into daily intervals based on the issued date. \n// num of observations per day\nObservationCurated\n| summarize count() by bin(issued, 1d)\n\n// Visualize timeseries chart\nObservationCurated\n| where issued between (datetime(1910-07-15T12:49:47.219Z)..datetime(2021-06-20T11:41:23.934Z))\n| make-series observationscount=count() on issued from datetime(1910-07-15T12:49:47.219Z) to datetime(2021-06-20T11:41:23.934Z) step 30d\n| render timechart \n\n//Trimming the tails of the dataset to select records between  01-01-2000 to 06-20-2021\nObservationCurated\n| where issued between (datetime(2000-01-01 00:00:00.0)..datetime(2021-06-20 11:41:23))\n| make-series observationscount=count() on issued from datetime(2000-01-01 00:00:00.0) to datetime(2021-06-20 11:41:23) step 30d\n| render timechart \n\n// taking out covid as an anomalie\nObservationCurated\n| where issued between (datetime(2000-01-01 00:00:00.0)..datetime(2020-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2000-01-01 00:00:00.0) to datetime(2020-01-01 00:00:00.0) step 30d\n| render timechart \n\n// identify anomalies\n// taking out covid as an anomalie\nObservationCurated\n| where issued between (datetime(2000-01-01 00:00:00.0)..datetime(2020-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2000-01-01 00:00:00.0) to datetime(2020-01-01 00:00:00.0) step 30d\n| extend anomalies = series_decompose_anomalies(observationscount, 0.5)\n| render anomalychart with(anomalycolumns=anomalies, title='Anomalies on medical observations every month for 20 years')\n\n// removing larger anomalies to focus on a relatively normal time at the hospital\nObservationCurated\n| where issued between (datetime(2011-08-05 00:00:00.0)..datetime(2019-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1d\n| render timechart \n\n// identifying anomalies between 2011 and 2019\nObservationCurated\n| where issued between (datetime(2011-08-05 00:00:00.0)..datetime(2019-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1d\n| extend anomalies = series_decompose_anomalies(observationscount, 1)\n| render anomalychart with(anomalycolumns=anomalies, title='Anomalies on daily medical observations for 7 years')\n\n//List Anomalies\nObservationCurated\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1d\n| extend anomalies = series_decompose_anomalies(observationscount, 1)\n| mv-expand observationscount, anomalies, issued\n| where toint(anomalies) <> 0\n| sort by todatetime(issued)\n\n// Separate anomaly properties: anomalies, score, baseline values\nObservationCurated\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1d\n| extend (anomalies, score, baseline) = series_decompose_anomalies(observationscount, 1)\n| mv-expand anomalies, issued, score, baseline \n| project anomalies = iff(toint(anomalies) == 0, int(null),toint(anomalies)), issued, observationscount, score, baseline\n\n//Join data to visualize on powerBI\n\n\n\n\n\n// Test\n\n//Trimming the tails of the dataset to select records between  01-01-2000 to 06-20-2021\nObservationCurated\n| where issued between (datetime(2011-08-05 00:00:00.0)..datetime(2019-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1h\n| render timechart \n\n// identifying anomalies between 2011 and 2019\nObservationCurated\n| where issued between (datetime(2011-08-05 00:00:00.0)..datetime(2019-01-01 00:00:00.0))\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1h\n| extend anomalies = series_decompose_anomalies(observationscount, 2.5)\n| render anomalychart with(anomalycolumns=anomalies, title='Anomalies on daily medical observations for 7 years')\n\n//List Anomalies\nObservationCurated\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1h\n| extend anomalies = series_decompose_anomalies(observationscount, 2.5)\n| mv-expand observationscount, anomalies, issued\n| where toint(anomalies) <> 0\n| sort by todatetime(issued)\n\n// Separate anomaly properties: anomalies, score, baseline values\nObservationCurated\n| make-series observationscount=count() on issued from datetime(2011-08-05 00:00:00.0) to datetime(2019-01-01 00:00:00.0) step 1d\n| extend (anomalies, score, baseline) = series_decompose_anomalies(observationscount, 1)\n| mv-expand anomalies, issued, score, baseline \n| project anomalies = iff(toint(anomalies) == 0, int(null),toint(anomalies)), issued, observationscount, score, baseline",
			"metadata": {
				"language": "kql"
			},
			"currentConnection": {
				"poolName": "adxpoolmedicaldata",
				"databaseName": "ObservationData"
			}
		},
		"type": "KqlQuery"
	}
}